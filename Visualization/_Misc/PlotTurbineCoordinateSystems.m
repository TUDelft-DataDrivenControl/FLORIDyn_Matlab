% Function to generate a figure to explain the coordinate systems

D = 178.4;
T = [200,100,119;1000,-100,119];
Coord = [0,0,0,1,0,0;...
    0,0,0,0,1,0;
    0,0,0,0,0,1]*50;

phi = deg2rad(-30);
%%
[RPs,~] = discretizeRotor(50);
RPs = RPs*D;

x_1 = linspace(0,7*D,20)';
OPs = [x_1,0*sqrt(x_1/100)];

% Rotor circle
ang = 0:0.01:2*pi; 
xp  = D/2*cos(ang);
yp  = D/2*sin(ang);

%% plot
f = figure;
quiver3(...
    Coord(1,1),...
    Coord(1,2),...
    Coord(1,3),...
    Coord(1,4),Coord(1,5),Coord(1,6),'LineWidth',2)
hold on
quiver3(...
    Coord(2,1),...
    Coord(2,2),...
    Coord(2,3),...
    Coord(2,4),Coord(2,5),Coord(2,6),'LineWidth',2)
quiver3(...
    Coord(3,1),...
    Coord(3,2),...
    Coord(3,3),...
    Coord(3,4),Coord(3,5),Coord(3,6),'LineWidth',2)

for iT = 1:size(T,1)
    % RPs
    scatter3(...
        cos(phi)*RPs(:,1)-sin(phi)*RPs(:,2)+T(iT,1),...
        sin(phi)*RPs(:,1)+cos(phi)*RPs(:,2)+T(iT,2),...
        RPs(:,3)+T(iT,3),...
        5,'k','filled')
    
    % OPs
    plot3(...
        [cos(phi),-sin(phi)]*OPs' + T(iT,1),...
        [sin(phi),cos(phi)]*OPs' + T(iT,2),...
        ones(size(x_1))*T(iT,3),':o','LineWidth',1)
    
    % Coordinate System
    quiver3(...
        Coord(1,1)+T(iT,1),...
        Coord(1,2)+T(iT,2),...
        Coord(1,3)+T(iT,3),...
        cos(phi)*Coord(1,4)-sin(phi)*Coord(1,5),...
        sin(phi)*Coord(1,4)+cos(phi)*Coord(1,5),...
        Coord(1,6),'LineWidth',2)
    
    quiver3(...
        Coord(2,1)+T(iT,1),...
        Coord(2,2)+T(iT,2),...
        Coord(2,3)+T(iT,3),...
        cos(phi)*Coord(2,4)-sin(phi)*Coord(2,5),...
        sin(phi)*Coord(2,4)+cos(phi)*Coord(2,5),...
        Coord(2,6),'LineWidth',2)
    
    quiver3(...
        Coord(3,1)+T(iT,1),...
        Coord(3,2)+T(iT,2),...
        Coord(3,3)+T(iT,3),...
        cos(phi)*Coord(3,4)-sin(phi)*Coord(3,5),...
        sin(phi)*Coord(3,4)+cos(phi)*Coord(3,5),...
        Coord(3,6),'LineWidth',2)
    
    % Diameter
    plot3(T(iT,1)+zeros(size(yp))-sin(phi)*xp,T(iT,2)+cos(phi)*xp,yp+T(iT,3),...
        'Color',[1,1,1]*0.7,'LineWidth',2);
    
    % Monopile
    plot3([T(iT,1),T(iT,1)],[T(iT,2),T(iT,2)],[0,T(iT,3)],...
        'k','LineWidth',2);
    
    % Origin to turbine
    quiver3(0,0,0,T(iT,1),T(iT,2),T(iT,3),'off','LineWidth',2)
end

set(gca, 'Projection','perspective')
grid on
axis equal
ylim([-300,300])
xlim([-10,1300])
zlim([0,250])
h = gca;
set(h, 'YDir', 'reverse');
xlabel('x_0')
ylabel('y_0')
zlabel('z_0')
hold off
f.Position(3:4) = [1071 420];
view(-28.9278,12.0766)
%%
%exportgraphics(gcf,'name.pdf','ContentType','vector')